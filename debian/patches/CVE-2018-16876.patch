From 4c6d714aefb05366cb329e139214c89ebb364899 Mon Sep 17 00:00:00 2001
From: Brian Coca <brian.coca+git@gmail.com>
Date: Wed, 5 Dec 2018 16:40:16 -0500
Subject: [PATCH] ensure ssh retry respects no log

---
 .../fragments/avoid_ssh_retry_discolsures.yml     |  2 ++
 lib/ansible/plugins/connection/ssh.py             | 15 +++++++++++----
 2 files changed, 13 insertions(+), 4 deletions(-)
 create mode 100644 changelogs/fragments/avoid_ssh_retry_discolsures.yml

--- /dev/null
+++ ansible-2.5.1+dfsg/changelogs/fragments/avoid_ssh_retry_discolsures.yml
@@ -0,0 +1,2 @@
+bugfixes:
+    - now no log is being respected on retry and high verbosity
--- ansible-2.5.1+dfsg.orig/lib/ansible/plugins/connection/ssh.py
+++ ansible-2.5.1+dfsg/lib/ansible/plugins/connection/ssh.py
@@ -256,11 +256,14 @@ def _ssh_retry(func):
             try:
                 try:
                     return_tuple = func(self, *args, **kwargs)
-                    display.vvv(return_tuple, host=self.host)
+                    if self._play_context.no_log:
+                        display.vvv('rc=%s, stdout & stderr censored due to no log' % return_tuple[0], host=self.host)
+                    else:
+                        display.vvv(return_tuple, host=self.host)
                     # 0 = success
                     # 1-254 = remote command return code
                     # 255 = failure from the ssh command itself
-                except (AnsibleControlPersistBrokenPipeError) as e:
+                except (AnsibleControlPersistBrokenPipeError):
                     # Retry one more time because of the ControlPersist broken pipe (see #16731)
                     display.vvv(u"RETRYING BECAUSE OF CONTROLPERSIST BROKEN PIPE")
                     return_tuple = func(self, *args, **kwargs)
@@ -268,7 +271,12 @@ def _ssh_retry(func):
                 if return_tuple[0] != 255:
                     break
                 else:
-                    raise AnsibleConnectionFailure("Failed to connect to the host via ssh: %s" % to_native(return_tuple[2]))
+                    msg = "Failed to connect to the host via ssh: "
+                    if self._play_context.no_log:
+                        msg += '<error censored due to no log>'
+                    else:
+                        msg += to_native(return_tuple[2])
+                    raise AnsibleConnectionFailure(msg)
             except (AnsibleConnectionFailure, Exception) as e:
                 if attempt == remaining_tries - 1:
                     raise
